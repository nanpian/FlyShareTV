package cn.fxdata.tv.activity;

import java.io.FileNotFoundException;
import java.util.ArrayList;

import cn.fxdata.tv.R;
import cn.fxdata.tv.R.id;
import cn.fxdata.tv.R.layout;
import cn.fxdata.tv.adapter.PhotoAdapter;
import android.app.ActionBar;
import android.app.Activity;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.PixelFormat;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.util.Log;
import android.view.Display;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager;
import android.widget.GridView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

public class PhotoSelectActivity extends Activity {
	private static final String TAG = "PhotoSelectActivity";
	private static final String CAMERA_TAG = "camera_capture";
	private static final int UPDATE_IMAGE_VIEW = 1;
	public static final int SET_PHOTO_OK = 0;
	private ArrayList<String> mItems = new ArrayList<String>();
	private ArrayList<String> tempItem = new ArrayList<String>();
	private GridView photoView;
	private PhotoAdapter mPhotoAdapter;
	public Handler handler;
	private int screenWidth;
	private int screenHeight;
	private String capturepath;
	private TextView titleView;
	private RelativeLayout settingview;
	private TextView menuText;
	private WindowManager mWgr;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		//requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
		setContentView(R.layout.activity_photo_select);
		//getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE,
				//R.layout.common_title_bar);
		titleView = (TextView)findViewById(R.id.title);
		titleView.setText("图片");
		settingview = (RelativeLayout)findViewById(R.id.setting_icon);
		settingview.setVisibility(View.GONE);
		photoView = (GridView)findViewById(R.id.photo_list);
		WindowManager windowManager = getWindowManager();  
		Display display = windowManager.getDefaultDisplay();  
		screenWidth = display.getWidth();  
		screenHeight = display.getHeight();
		
		handler = new Handler () {
			@Override
			public void handleMessage(Message msg) {
				super.handleMessage(msg);
				if(msg.what == UPDATE_IMAGE_VIEW) {
					updateImageView();
				} else if (msg.what == PhotoAdapter.SET_PHOTO_IMAGE) {
					Intent intent = getIntent();
					intent.putExtra("selectedpath", (String)msg.obj);
					setResult(SET_PHOTO_OK,intent);
					Log.d("renjun1","selected:" + (String)msg.obj);
					finish();
				}else if (msg.what == PhotoAdapter.CAMERA_CAPTURE) {
					Intent mIntent = (Intent)msg.obj;
					Bundle data = mIntent.getExtras();
					capturepath =  data.getString("capturepath");
					startActivityForResult(mIntent, 1);
				}
			}
		};
		getPhotoFile();
		//initWindowMenu();		
	}
	private void initWindowMenu() {
		// TODO Auto-generated method stub
		mWgr = (WindowManager)getSystemService(Context.WINDOW_SERVICE);
		WindowManager.LayoutParams wmParams =  new WindowManager.LayoutParams();
		menuText = new TextView(this);
		menuText.setLayoutParams(new LayoutParams(screenWidth,130));
		menuText.setText("所有图片");
		menuText.setBackgroundColor(R.color.black);
		//menuText.setAlpha(60);
		menuText.setGravity(Gravity.CENTER_VERTICAL);
		menuText.setPadding(12, 0,0,0);
		menuText.setTextColor(R.color.white);
		wmParams.width = screenWidth;  
        wmParams.height = 130;
		wmParams.x = 0;
		wmParams.y = screenHeight -130;
		wmParams.format = PixelFormat.RGBA_8888; 
		wmParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
		mWgr.addView(menuText, wmParams);
		
	}
	@Override
	protected void onResume() {
		super.onResume();
		updateImageView();
	}
	
	@Override
	  protected void onActivityResult(int requestCode, int resultCode, Intent intent) {
	    if (requestCode == 1 && resultCode == RESULT_OK) {
	    	try {
	    		Uri u = Uri.parse(MediaStore.Images.Media.insertImage(getContentResolver(), capturepath, null, null));
	    		handler.obtainMessage(PhotoAdapter.SET_PHOTO_IMAGE, capturepath).sendToTarget();
	    	} catch (FileNotFoundException e) {
	    		e.printStackTrace();
	    	}
	    }
	  }
	

	private void updateImageView() {
		// TODO Auto-generated method stub
		if (mItems != null) {
			tempItem.clear();
			tempItem.addAll(mItems);
		}
		int Imageviewscale = screenWidth/3;
		mPhotoAdapter = new PhotoAdapter(this, tempItem,Imageviewscale,handler);
		photoView.setAdapter(mPhotoAdapter);
		
	}

	private void getPhotoFile() {
		// TODO Auto-generated method stub
		mItems.add(CAMERA_TAG);
		if (!Environment.getExternalStorageState().equals(  
                Environment.MEDIA_MOUNTED))  
        {  
            Toast.makeText(this, "暂无外部存储", Toast.LENGTH_SHORT).show();  
        }
		
		Thread loadImageThread = new Thread(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				Uri mImageUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;  
                ContentResolver mContentResolver = PhotoSelectActivity.this  
                        .getContentResolver();
                Cursor mCursor = null;
                try {
                	mCursor = mContentResolver.query(mImageUri, null,  
                            MediaStore.Images.Media.MIME_TYPE + "=? or "  
                                    + MediaStore.Images.Media.MIME_TYPE + "=?",  
                            new String[] { "image/jpeg", "image/png" },  
                            MediaStore.Images.Media.DATE_MODIFIED); 
                	Log.d(TAG,"mCursor.count: "+mCursor.getCount());
                	if (mCursor != null && mCursor.getCount() > 0){
                		mCursor.moveToFirst();
                	}
                	while (mCursor.moveToNext()) {
                		 String path = mCursor.getString(mCursor  
                                 .getColumnIndex(MediaStore.Images.Media.DATA));
                		 mItems.add(path);
                		 
                	}
                } catch (Exception e) {
                } finally {
                	if (mCursor!= null) {
                		mCursor.close();
                	}
                }
                handler.sendEmptyMessage(UPDATE_IMAGE_VIEW);
			}
			
		});
		loadImageThread.start();

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.photo_select, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	@Override  
    public void onDestroy()   
    {  
        // TODO Auto-generated method stub  
		Log.d("renjun1","destory");
        super.onDestroy();  
        if(menuText != null)  
        {  Log.d("renjun1","1111111111111");
            //移除悬浮窗口  
        	mWgr.removeView(menuText);  
        }  
    }  
}
