package cn.fxdata.tv.activity;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import cn.fxdata.tv.R;
import cn.fxdata.tv.application.FxApplication;
import cn.fxdata.tv.base.BaseActivity;
import cn.fxdata.tv.bean.FlyShareTVdataHelper;
import cn.fxdata.tv.bean.VideoItem;
import cn.fxdata.tv.bean.LoginInfoReturn.UserInfo;
import cn.fxdata.tv.fragment.OwnerMsgCacheFragment;
import cn.fxdata.tv.fragment.OwnerMsgFavFragment;
import cn.fxdata.tv.fragment.OwnerMsgPathFragment;
import cn.fxdata.tv.utils.Log;
import cn.fxdata.tv.utils.LoginUserInfo;
import cn.fxdata.tv.utils.PortraitManger;

/**
 * Created by Jianyong on 15/6/12.
 */
public class OwnerMsgActivity extends BaseActivity implements OnClickListener, ViewPager.OnPageChangeListener {

    private static final String TAG = "OwnerMsgActivity";
    private static final String ACTIVITY_CAG = null;
    private ImageView ivLeft;
    private TextView tvTitle;
    private ImageView ivRight;
    private ImageView ivAvatar;
    private Button btnRegister;
    private ViewPager viewPager;
    private List<Fragment> mDatas;
    private FragmentPagerAdapter mAdapter;

    private Button btnPath;
    private Button btnFav;
    private Button btnCache;
    private PortraitManger pmgr;

    private UserInfo loginInfo;

    // private FlyShareTVdataHelper dbHelper;
    // private ArrayList<VideoItem> mItems = new ArrayList<VideoItem>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_owner_msg);
        // dbHelper = new FlyShareTVdataHelper(this,"FlyShareTV.db3", null, 1);
        // initVideItem();
        initView();
    }

    private void initView() {
        ivLeft = (ImageView) findViewById(R.id.iv_left);
        ivLeft.setOnClickListener(this);
        tvTitle = (TextView) findViewById(R.id.title);
        tvTitle.setText("我");
        ivRight = (ImageView) findViewById(R.id.iv_right2);
        ivRight.setImageResource(R.drawable.settings_icon);
        ivRight.setOnClickListener(this);
        ivAvatar = (ImageView) findViewById(R.id.avatar);
        btnRegister = (Button) findViewById(R.id.login);
        btnRegister.setOnClickListener(this);

        btnPath = (Button) findViewById(R.id.btn_path);
        btnPath.setOnClickListener(this);
        btnFav = (Button) findViewById(R.id.btn_fav);
        btnFav.setOnClickListener(this);
        btnCache = (Button) findViewById(R.id.btn_cache);
        btnCache.setOnClickListener(this);
        pmgr = new PortraitManger(this);

        viewPager = (ViewPager) findViewById(R.id.viewpager);
        // initVideItem();

        OwnerMsgPathFragment pathFragment = new OwnerMsgPathFragment();
        OwnerMsgFavFragment favFragment = new OwnerMsgFavFragment();
        OwnerMsgCacheFragment cacheFragment = new OwnerMsgCacheFragment();

        mDatas = new ArrayList<Fragment>();

        mDatas.add(pathFragment);
        mDatas.add(favFragment);
        mDatas.add(cacheFragment);

        mAdapter = new FragmentPagerAdapter(getSupportFragmentManager()) {
            @Override
            public int getCount() {
                return mDatas.size();
            }

            @Override
            public Fragment getItem(int arg0) {
                return mDatas.get(arg0);
            }
        };
        viewPager.setAdapter(mAdapter);

        viewPager.setOnPageChangeListener(this);
        if ("shareTv_download_progress".equals(getIntent().getAction())){
        	Log.d("renjun1","download stat 11111 222");
        	viewPager.setCurrentItem(2);
        	btnCache.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnCache.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnPath.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnPath.setTextColor(Color.parseColor("#ec6c6c"));
        } else {
            viewPager.setCurrentItem(0);
            btnPath.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnPath.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnCache.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnCache.setTextColor(Color.parseColor("#ec6c6c"));
        }

    }

    @Override
    public void onResume() {
        super.onResume();
        // initVideItem();
        String path = pmgr.getProtraitPhoto();
        if (!path.isEmpty()) {
            File imagefile = new File(path);
            if (imagefile.exists()) {
                ivAvatar.setImageURI(Uri.parse(path));
            }
        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
        case R.id.iv_left:
            finish();
            break;
        case R.id.iv_right2:
            startActivity(new Intent(OwnerMsgActivity.this, SystemSettingActivity.class));
            break;
        case R.id.login:
            // 判断是否有登录信息
            loginInfo = ((FxApplication) FxApplication.getInstance()).getLoginInfo();
            try {
                if (loginInfo.getMobile() == null) {
                    Log.i(OwnerMsgActivity.ACTIVITY_CAG, "未有登录信息，需要手动登录");
                    startActivity(new Intent(OwnerMsgActivity.this, UserActivity.class));
                } else {
                    Log.i(OwnerMsgActivity.ACTIVITY_CAG, "已有登录信息，不需要登录了");
                    startActivity(new Intent(OwnerMsgActivity.this, UserLoginedActivity.class));
                }
            } catch (Exception e) {
                Log.i(OwnerMsgActivity.ACTIVITY_CAG, "有异常，手动登录");
                startActivity(new Intent(OwnerMsgActivity.this, UserActivity.class));
            }
            break;
        case R.id.btn_path:
            viewPager.setCurrentItem(0, true);
            btnPath.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnPath.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnCache.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnCache.setTextColor(Color.parseColor("#ec6c6c"));
            break;
        case R.id.btn_fav:
            viewPager.setCurrentItem(1, true);
            btnFav.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnFav.setTextColor(Color.parseColor("#f7f7f6"));
            btnPath.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnPath.setTextColor(Color.parseColor("#ec6c6c"));
            btnCache.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnCache.setTextColor(Color.parseColor("#ec6c6c"));
            break;
        case R.id.btn_cache:
            viewPager.setCurrentItem(2, true);
            btnCache.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnCache.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnPath.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnPath.setTextColor(Color.parseColor("#ec6c6c"));
            break;
        default:
            break;
        }

    }

    @Override
    public void onPageScrolled(int i, float v, int i1) {

    }

    @Override
    public void onPageSelected(int i) {
    	switch(i) {
    	case 0:
    		btnPath.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnPath.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnCache.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnCache.setTextColor(Color.parseColor("#ec6c6c"));
            break;
    	case 1:
    		btnFav.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnFav.setTextColor(Color.parseColor("#f7f7f6"));
            btnPath.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnPath.setTextColor(Color.parseColor("#ec6c6c"));
            btnCache.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnCache.setTextColor(Color.parseColor("#ec6c6c"));
            break;
    	case 2:
    		btnCache.setBackgroundColor(Color.parseColor("#ec6c6c"));
            btnCache.setTextColor(Color.parseColor("#f7f7f6"));
            btnFav.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnFav.setTextColor(Color.parseColor("#ec6c6c"));
            btnPath.setBackgroundColor(Color.parseColor("#f7f7f6"));
            btnPath.setTextColor(Color.parseColor("#ec6c6c"));
            break;
        default:
        	break;
    	}

    }

    @Override
    public void onPageScrollStateChanged(int i) {

    }

}