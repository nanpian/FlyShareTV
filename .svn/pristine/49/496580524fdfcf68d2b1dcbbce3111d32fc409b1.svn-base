package cn.fxdata.tv.activity;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONObject;

import com.alibaba.fastjson.JSONException;
import com.android.volley.Listener;
import com.android.volley.VolleyError;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import cn.fxdata.tv.R;
import cn.fxdata.tv.base.BaseTitleBarActivity;
import cn.fxdata.tv.utils.Log;
import cn.fxdata.tv.utils.StringUtils;

public class RegisterActivity extends BaseTitleBarActivity implements
		OnClickListener, TextWatcher {
	private static final String ACTIVITY_TAG = null;
	private Button btn;
	private ImageView left;

	private EditText username, phone, password, passwordconfirm, verify_code;
	private TextView getCode, toastText;
	private Context mContext;
	private String mobileNumber;
	private int num = 60;
	private Handler handler = new Handler();

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register);
		mContext = this;
		initview();
	}

	private void initview() {
		btn = (Button) findViewById(R.id.btn_submit);
		btn.setOnClickListener(this);
		left = (ImageView) findViewById(R.id.iv_left);
		left.setOnClickListener(this);
		username = (EditText) findViewById(R.id.username);
		username.setOnClickListener(this);
		phone = (EditText) findViewById(R.id.phone);
		phone.setOnClickListener(this);
		password = (EditText) findViewById(R.id.password);
		password.setOnClickListener(this);
		passwordconfirm = (EditText) findViewById(R.id.passwordconfirm);
		passwordconfirm.setOnClickListener(this);
		verify_code = (EditText) findViewById(R.id.verify_code);
		verify_code.setOnClickListener(this);
		getCode = (TextView) findViewById(R.id.sendverify_code);
		getCode.setOnClickListener(this);
		toastText = (TextView) findViewById(R.id.tv_toast);

	}

	private void setMsgcodeView() {
		getCode.setText(num + "s  重新发送");
		getCode.setEnabled(false);
		num = 60;
		runnable.run();
	}

	Runnable runnable = new Runnable() {

		@Override
		public void run() {
			if (num != 0) {
				getCode.setText(num-- + "s  重新发送");
				handler.postDelayed(runnable, 1 * 1000);
			} else {
				getCode.setEnabled(true);
				getCode.setText("重新发送");
			}
		}
	};

	/**
	 * 用手机号码获取短信验证码
	 */
	private void getMsgCodeWithPhone() {

		mobileNumber = phone.getText().toString();

		if (TextUtils.isEmpty(mobileNumber)) {
			setToast("请输入您的手机号码");
			Log.i(RegisterActivity.ACTIVITY_TAG,
					"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ");
		} else if (!StringUtils.isPhone(mobileNumber)) {
			setToast("请您输入正确的手机号码");
			mobileNumber = null;
			Log.i(RegisterActivity.ACTIVITY_TAG,
					"?????????????????????????????????");
		} else {
			sendMobileForCode(mobileNumber);
			Log.i(RegisterActivity.ACTIVITY_TAG,
					"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ ");
		}
	}

	private void setToast(String text) {
		toastText.setVisibility(View.VISIBLE);
		toastText.setText(text);
	}

	/**
	 * 请求获取短信验证码
	 * 
	 * @param mobileNumber
	 */
	private void sendMobileForCode(String mobileNumber) {
		Map<String, String> param = new HashMap<String, String>();
		param.put("mobile", mobileNumber);
		param.put("type", "register");
		param.put("ac", "sendCode");
		showDialog("正在获取验证码");

		sendVolleyRequest(param, new Listener<String>() {

			@Override
			public void onSuccess(String response) {
				Log.i(RegisterActivity.ACTIVITY_TAG,
						"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ ");
				finish();
			}

			@Override
			public void onError(VolleyError error) {
				dismissDialog();
				showHttpError(error.getMessage());
			}
		});

	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.iv_left:
			finish();
			break;
		case R.id.sendverify_code:
			// SystemTool.closeKeybord(getCode, mContext);
			if (StringUtils.isNullOrEmpty(mobileNumber)) {
				getMsgCodeWithPhone();
			} else {
				sendMobileForCode(mobileNumber);
			}
			break;

		case R.id.btn_submit:
			startActivity(new Intent(RegisterActivity.this, UserActivity.class));
			break;
		default:
			break;
		}
	}

	@Override
	public void afterTextChanged(Editable s) {
		// TODO Auto-generated method stub

	}

	@Override
	public void beforeTextChanged(CharSequence s, int start, int count,
			int after) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onTextChanged(CharSequence s, int start, int before, int count) {
		// TODO Auto-generated method stub

	}
}