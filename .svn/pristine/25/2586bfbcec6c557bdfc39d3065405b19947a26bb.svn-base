package cn.fxdata.tv.activity;

import com.zgntech.core.manager.UIFragmentManager;

import cn.fxdata.tv.R;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.content.res.Configuration;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Toast;
import cn.fxdata.tv.view.video.FullScreenVideoView;
import cn.fxdata.tv.view.widget.FlowRadioGroup.OnCheckedChangeListener;
import cn.fxdata.tv.base.BaseActivity;
import cn.fxdata.tv.fragment.detail.CommentFragment;
import cn.fxdata.tv.fragment.detail.DetailFragment;
import cn.fxdata.tv.fragment.detail.EpisodeFragment;
import cn.fxdata.tv.view.widget.FlowRadioGroup;

/**
 * Video detail fragment,there's a video surface view,a fragment
 */
public class ForplayVideoViewActivity extends BaseActivity implements FullScreenVideoView.ToggleFullScreen {

    private final static String TAG = "ForplayVideoDetailActivity";
    private Context context;
    private FlowRadioGroup mRadioGroup;
    private UIFragmentManager fragmentManager;
    private ImageView video_fullscreen;
    private RelativeLayout video_play_all;
    private cn.fxdata.tv.view.video.FullScreenVideoView video_play_view;
    private RelativeLayout video_down_layout;
    private FullScreenVideoView mVideoView;
    private static int fragmentId = 0;
    private ProgressBar bar;
    int height;
    int width;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        context = this;
        setContentView(R.layout.act_video_play_view_detail);
        initFragments();
        initView();
        
        mVideoView.setOnToggleFullScreen(this);
        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {

            @Override
            public void onPrepared(MediaPlayer mp) {
                bar.setVisibility(View.GONE);
            }
        });

        calculateVideoViewSize();
        mVideoView.setDimensions(width, height);
        mVideoView.setMediaController(new cn.fxdata.tv.view.video.VideoControllerView(this));
        mVideoView.setVideoURI(Uri.parse("http://fx.72zhe.com/static/fx/sample.mp4"));
        mVideoView.requestFocus();
        mVideoView.start();

    }

    private void initView() {
        mRadioGroup = (FlowRadioGroup) this.findViewById(R.id.video_detail_radiogroup);
        mRadioGroup.setOnCheckedChangeListener(radioCheckedChangeListener);
        mRadioGroup.getRadioButton(0).setChecked(true);
        bar = (ProgressBar) findViewById(R.id.videoplayerPreloader);
        video_down_layout = (RelativeLayout) findViewById(R.id.video_down_layoutx);
        mVideoView = (cn.fxdata.tv.view.video.FullScreenVideoView) findViewById(R.id.video_viewx);

    }

    private void initFragments() {
        fragmentManager = new UIFragmentManager(this, R.id.video_detail_content, getSupportFragmentManager());
        fragmentManager.put("video_detail_comments", new CommentFragment());
        fragmentManager.put("video_detail_channel", new EpisodeFragment());
        fragmentManager.put("video_detail_description", new DetailFragment());
    }

    /** tab button checked listener */
    private OnCheckedChangeListener radioCheckedChangeListener = new OnCheckedChangeListener() {
        @Override
        public void onCheckedChanged(FlowRadioGroup group, int checkedId) {
            // TODO Auto-generated method stub
            switch (checkedId) {
            case R.id.video_detail_comment:
                fragmentManager.show("video_detail_comments");
                fragmentId = 0;
                break;
            case R.id.video_detail_channel:
                fragmentManager.show("video_detail_channel");
                fragmentId = 1;
                break;
            case R.id.video_detail_description:
                fragmentManager.show("video_detail_description");
                fragmentId = 2;
                break;
            default:
                break;
            }
        }
    };
    
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
    	Log.i("jiangtao4", "activity keydown");
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            Configuration config = getResources().getConfiguration();
            DisplayMetrics metrics = getResources().getDisplayMetrics();
            // if the screen orientation is landscape now
            if (config.orientation == Configuration.ORIENTATION_LANDSCAPE) {
                // set it portait!!!
            	setScreenOrientation(false, ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
                return true;
            } else {
            	return super.onKeyDown(keyCode, event);
            }
        }
        return super.onKeyDown(keyCode, event);
    }


    private void calculateVideoViewSize() {
        DisplayMetrics metrics = getResources().getDisplayMetrics();
        if (metrics.widthPixels < metrics.heightPixels) {
            height = (int) (metrics.heightPixels*(3/(8*1.0f)));
            width = metrics.widthPixels;
        } else {
            width = metrics.widthPixels;
            height = metrics.heightPixels;
        }
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        //calculateVideoViewSize();
        //mVideoView.setDimensions(width, height);
        //mVideoView.getHolder().setFixedSize(width, height);
        Log.i(TAG, " == onConfigurationChanged");
        String screen = newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE ? "横屏" : "竖屏";
        Toast.makeText(this, screen, Toast.LENGTH_LONG).show();
        bar.refreshDrawableState();
    }
    
    public void setScreenOrientation(boolean isFullScreen, int screenOritation){
    	DisplayMetrics metrics = getResources().getDisplayMetrics();
    	if(isFullScreen){
    		Log.i("jiangtao4", "activity onToggleFullScreen");
            video_down_layout.setVisibility(View.GONE);
            FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT);
            mVideoView.setLayoutParams(layoutParams);
            width = metrics.widthPixels;
            height = metrics.heightPixels;
            mVideoView.setDimensions(height, width);	
    	}else{
    		 video_down_layout.setVisibility(View.VISIBLE);
             FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, 200);
             mVideoView.setLayoutParams(layoutParams);
             //屏幕旋转后，宽高相反
             height = (int) (metrics.widthPixels*(3/(8*1.0f)));
             width = metrics.heightPixels;
             mVideoView.setDimensions(width, height);
    	}
    	mVideoView.setIsFullScreen(isFullScreen);
    	setRequestedOrientation(screenOritation);
    }

    @Override
    public void onToggleFullScreen(boolean isFullScreen) {
    	DisplayMetrics metrics = getResources().getDisplayMetrics();
    	if(isFullScreen){
    		setScreenOrientation(isFullScreen, ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);	
    	}else{
    		setScreenOrientation(isFullScreen, ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    	}
    }

}
