package cn.fxdata.tv.activity;

import java.util.HashMap;
import java.util.Map;

import android.content.Intent;
import android.os.Bundle;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import cn.fxdata.tv.R;
import cn.fxdata.tv.base.BaseTitleBarActivity;
import cn.fxdata.tv.base.BaseUserActivity.StringFormatUtil;
import cn.fxdata.tv.bean.LoginInfoReturn;
import cn.fxdata.tv.bean.LoginInfoReturn.LoginInfo;
import cn.fxdata.tv.utils.Log;
import cn.fxdata.tv.utils.StringUtils;

import com.zgntech.core.listener.VolleyListener;
import com.zgntech.core.listener.VolleyListener.VolleyJsonCallBack;

public class SearchPwModfiyActivity extends BaseTitleBarActivity implements
        OnClickListener {
    private ImageView back, right2;
    private Button next;
    private TextView tv_show, tv_title, show3;
    private EditText password, repassword;
    private LoginInfo info;
    private static final String ACTIVITY_TAG = null;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_searchpw_modfiy);
        initview();
    }

    private void initview() {
        tv_title = (TextView) findViewById(R.id.title);
        tv_title.setText("找回密码");
        right2 = (ImageView) findViewById(R.id.iv_right2);
        right2.setVisibility(right2.GONE);
        back = (ImageView) findViewById(R.id.iv_left);
        back.setOnClickListener(this);
        password = (EditText) findViewById(R.id.password);
        repassword = (EditText) findViewById(R.id.repassword);
        next = (Button) findViewById(R.id.next);
        next.setOnClickListener(this);
        tv_show = (TextView) findViewById(R.id.tv_show2);
        // 根据状态改颜色（手动）
        tv_show.setGravity(Gravity.CENTER);
        String wholeStr = "确认账号······修改密码······完成";
        StringFormatUtil spanStr = new StringFormatUtil(this, wholeStr,
                "确认账号······修改密码", R.color.text_red_color).fillColor();
        tv_show.setText(spanStr.getResult());

        /*
         * show3.setGravity(Gravity.CENTER); String wholeStr2 =
         * "您的验证已成功通过，请立即修改您的登录密码"; StringFormatUtil spanStr2 = new
         * StringFormatUtil(this, wholeStr2, "成功通过", R.color.black).fillColor();
         * show3.setText(spanStr2.getResult());
         */
        // final String s1="密码不能为空";

    }

    // 重写后退键，使其跳到指定页面
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
            // 如果按下返回键
            // startActivity(new
            // Intent(SearchPwModfiyActivity.this,LoginActivity.class));
            Intent intent2 = new Intent();
            intent2.setClass(SearchPwModfiyActivity.this, LoginActivity.class);
            intent2.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
            startActivity(intent2);
            onBackPressed();
            return true;
        } else {
            return super.onKeyDown(keyCode, event);
        }
    }

    private void Modifypw() {
        String Password = password.getText().toString();
        String RePassword = repassword.getText().toString();

        Intent intent = getIntent();
        String mobileNumber = intent.getStringExtra("phone");

        if (StringUtils.isNullOrEmpty(Password)) {
            // setToast("密码不能为空");
            final String s1 = "密码不能为空";
            Toast t1 = Toast.makeText(getApplicationContext(), s1, 1);
            t1.show();
            return;
        }

        if (Password.length() < 6) {
            // setToast("密码过于简单，请重新修改");
            final String s2 = "密码过于简单，请重新修改";
            Toast t2 = Toast.makeText(getApplicationContext(), s2, 1);
            t2.show();
            return;
        }

        if (!StringUtils.equalsIgnoreCase(Password, RePassword)) {
            // setToast("两次密码不一致，请重新修改");
            final String s3 = "两次密码不一致，请重新修改";
            Toast t3 = Toast.makeText(getApplicationContext(), s3, 1);
            t3.show();
            return;
        }

        if (StringUtils.isNullOrEmpty(RePassword)) {
            // setToast("密码不能为空");
            final String s4 = "新密码不能为空";
            Toast t4 = Toast.makeText(getApplicationContext(), s4, 1);
            t4.show();
            return;
        }
        loginWithMobile(mobileNumber, Password, RePassword);
    }

    /**
     * 提交
     * 
     * @param user_id
     * @param oldPassword
     * @param newPassword
     */
    private void loginWithMobile(String mobileNumber, String Password,
            String RePassword) {
        Map<String, String> param = new HashMap<String, String>();
        param.put("mobile", mobileNumber);
        param.put("password", Password);
        Log.d(ACTIVITY_TAG, Password);
        param.put("repassword", RePassword);
        param.put("ac", "modifyPassword");
        showDialog("正在提交...");
        sendVolleyRequest(param, new VolleyListener(LoginInfoReturn.class,
                new VolleyJsonCallBack() {
                    @Override
                    public void onResonpse(Object object) {
                        dismissDialog();
                        LoginInfoReturn loginInfoReturn = (LoginInfoReturn) object;
                        ModfiySuccess(loginInfoReturn.getData());
                        loginInfoReturn = null;
                    }

                    @Override
                    public void onError(int errorCode, String errorMsg) {
                        dismissDialog();
                        showToast(errorMsg);
                        /**
                         * ???**** if (errorCode == 20000) {
                         * showToast("输入有误，请重新输入" + errorMsg); } else if
                         * (errorCode == 20002) { showToast("原密码不正确，请重新输入" +
                         * errorMsg); } ???
                         ****/
                    }

                }));
    }

    private void ModfiySuccess(LoginInfoReturn.LoginInfo info) {
        Intent intent = new Intent();
        intent.setClass(SearchPwModfiyActivity.this,
                SearchPwCompleteActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        // intent.putExtra("phone", Phone.getText().toString());
        startActivity(intent);
    }

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        switch (v.getId()) {
        case R.id.iv_left:
            Intent intent = new Intent();
            intent.setClass(SearchPwModfiyActivity.this, LoginActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
            startActivity(intent);
            onBackPressed();
            break;
        case R.id.next:
            Modifypw();
            /*
             * startActivity(new Intent(SearchPwModfiyActivity.this,
             * SearchPwCompleteActivity.class));
             */
            break;
        }
    }
}
