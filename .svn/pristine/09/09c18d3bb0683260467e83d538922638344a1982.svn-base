package cn.fxdata.tv.view;

import java.util.ArrayList;

import cn.fxdata.tv.R;
import cn.fxdata.tv.activity.ForplayVideoViewActivity;
import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.os.Handler;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.AttributeSet;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

/**
 * 首页的SlideShow View
 * @author zhaoxin5
 *
 */
@SuppressLint("NewApi")
public class HomeSlideShow extends RelativeLayout implements HomeSlideShowPager.OnSingleTouchListener{

	private Context mContext = null;
	
	public HomeSlideShow(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		View root = LayoutInflater.from(context).inflate(R.layout.main_slide_show, this, true);
		mContext = context;
		Log.i(TAG, "HomeSlideShow Create 1");
		setupSlideShowData();
	}

	public HomeSlideShow(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		View root = LayoutInflater.from(context).inflate(R.layout.main_slide_show, this, true);
		mContext = context;
		Log.i(TAG, "HomeSlideShow Create 2");
		setupSlideShowData();
	}
	
	private final static int sSlideShowTimely = 2500;
	private HomeSlideShowPager mHomeViewPager = null;
	private TextView mHomeIndicatortitle = null;
	// private ImageLoader mImageLoader = null; 
	private HomePagerAdapter mHomePagerAdapter = null;
	private View mIndicator0,mIndicator1,mIndicator2;
	private final static String TAG = "HomeSlideShow";
	// private RequestQueue mQueue;
	
	private Handler mSlideShowHandler = new Handler();
	private Runnable mSledeShowRunnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			int next = mHomeViewPager.getCurrentItem() + 1;
			if(next >= 3) next = 0;
			mHomeViewPager.setCurrentItem(next, true);
			// Log.i(TAG, "timely change the slideshow current item : " + next);
			// mSlideShowHandler.postDelayed(this, sSlideShowTimely);
		}
	};
	
	private void setupSlideShowViews(){
		// 初始化Views
		// mHomeSlideShow = (RelativeLayout) this.findViewById(R.id.mHome_slide_show);
		mHomeViewPager = (HomeSlideShowPager) this.findViewById(R.id.mHome_viewpager);
		mHomeViewPager.setOnSingleTouchListener(this);
		mHomeIndicatortitle = (TextView) this.findViewById(R.id.mHome_indicatortitle);
		mIndicator0 = this.findViewById(R.id.mHome_indicator_0);
		mIndicator1 = this.findViewById(R.id.mHome_indicator_1);
		mIndicator2 = this.findViewById(R.id.mHome_indicator_2);
	}
	
	private final class HomePagerAdapter extends PagerAdapter {
		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return mSlideShows.size();
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			// TODO Auto-generated method stub
			((ViewPager) container).removeView(mSlideShows.get(position).view);
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			// TODO Auto-generated method stub
			((ViewPager) container).addView(mSlideShows.get(position).view);
			return mSlideShows.get(position).view;
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			// TODO Auto-generated method stub
			return arg0 == arg1;
		}
	}
	
	private void updateTitleAndIndicator(int position){
		String str = mSlideShows.get(position).title;
		mHomeIndicatortitle.setText(str);
		Drawable sel = this.getResources().getDrawable(R.drawable.dra_dot_red);
		Drawable unsel = this.getResources().getDrawable(R.drawable.dra_dot_white);
		switch (position) {
		case 0:
			mIndicator0.setBackground(sel);
			mIndicator1.setBackground(unsel);
			mIndicator2.setBackground(unsel);
			break;
		case 1:
			mIndicator0.setBackground(unsel);
			mIndicator1.setBackground(sel);
			mIndicator2.setBackground(unsel);
			break;
		case 2:
			mIndicator0.setBackground(unsel);
			mIndicator1.setBackground(unsel);
			mIndicator2.setBackground(sel);
			break;	
		default:
			break;
		}
	}
	
	private class HomePageChangeListener implements OnPageChangeListener {
		/**
		 * 当ViewPager中页面的状态发生改变时调用
		 */
		public void onPageSelected(int position) {
			updateTitleAndIndicator(position);
			mSlideShowHandler.removeCallbacks(mSledeShowRunnable);
			mSlideShowHandler.postDelayed(mSledeShowRunnable, sSlideShowTimely);
		}

		public void onPageScrollStateChanged(int arg0) {
			if(arg0 == 1){
				// 正在滑动
				mSlideShowHandler.removeCallbacks(mSledeShowRunnable);
			}
			if(arg0 == 2){
				// 滑动结束
				mSlideShowHandler.removeCallbacks(mSledeShowRunnable);
				mSlideShowHandler.postDelayed(mSledeShowRunnable, sSlideShowTimely);
			}
		}

		public void onPageScrolled(int arg0, float arg1, int arg2) {
		}
	}
	
	private void setupSlideShowData(){
		// mQueue = Volley.newRequestQueue(this);
		// mImageLoader = new ImageLoader(mQueue, new BitmapCache());
		setupSlideShowViews();
		setData();
		updateTitleAndIndicator(0);
		mSlideShowHandler.removeCallbacks(mSledeShowRunnable);
		mSlideShowHandler.postDelayed(mSledeShowRunnable, sSlideShowTimely);
	}

	@Override
	public void onSingleTouch(View v) {
		// TODO Auto-generated method stub
		if(v instanceof HomeSlideShowPager){
			// start the video detail fragment
	    	Intent intent = new Intent(mContext, ForplayVideoViewActivity.class);
	    	intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
	    	mContext.startActivity(intent);
		}
	}
	
	private ArrayList<SlideShow> mSlideShows = new ArrayList<HomeSlideShow.SlideShow>();
	private void setData() {
		Drawable d = getContext().getResources().getDrawable(R.drawable.hot_adv_image);
		mSlideShows.add(new SlideShow(d, "First", 1));
		mSlideShows.add(new SlideShow(d, "Second", 2));
		mSlideShows.add(new SlideShow(d, "Third", 3));
		
		mHomePagerAdapter = new HomePagerAdapter();
		mHomeViewPager.setAdapter(mHomePagerAdapter);
		mHomeViewPager.setOnPageChangeListener(new HomePageChangeListener());
	}
	
	class SlideShow {
		Drawable drawable;
		String title;
		int index;
		ImageView view;
		SlideShow(Drawable d, String t, int i) {
			drawable = d;
			title = t;
			index = i;
			view = new ImageView(getContext());
			view.setBackground(drawable);
			view.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
		}
	}
}
